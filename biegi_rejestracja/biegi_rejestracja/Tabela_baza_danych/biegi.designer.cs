#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace biegi_rejestracja.Tabela_baza_danych
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bieg_rejestracja")]
	public partial class biegiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBiegi(Biegi instance);
    partial void UpdateBiegi(Biegi instance);
    partial void DeleteBiegi(Biegi instance);
    partial void InsertTypy_biegów(Typy_biegów instance);
    partial void UpdateTypy_biegów(Typy_biegów instance);
    partial void DeleteTypy_biegów(Typy_biegów instance);
    #endregion
		
		public biegiDataContext() : 
				base(global::biegi_rejestracja.Properties.Settings.Default.Bieg_rejestracjaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public biegiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public biegiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public biegiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public biegiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Biegi> Biegi
		{
			get
			{
				return this.GetTable<Biegi>();
			}
		}
		
		public System.Data.Linq.Table<Typy_biegów> Typy_biegów
		{
			get
			{
				return this.GetTable<Typy_biegów>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Biegi")]
	public partial class Biegi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nazwa;
		
		private int _Dystans;
		
		private string _Miasto;
		
		private int _Id_typ;
		
		private System.DateTime _Data;
		
		private int _Oplata_start;
		
		private EntityRef<Typy_biegów> _Typy_biegów;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnDystansChanging(int value);
    partial void OnDystansChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnId_typChanging(int value);
    partial void OnId_typChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnOplata_startChanging(int value);
    partial void OnOplata_startChanged();
    #endregion
		
		public Biegi()
		{
			this._Typy_biegów = default(EntityRef<Typy_biegów>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dystans", DbType="Int NOT NULL")]
		public int Dystans
		{
			get
			{
				return this._Dystans;
			}
			set
			{
				if ((this._Dystans != value))
				{
					this.OnDystansChanging(value);
					this.SendPropertyChanging();
					this._Dystans = value;
					this.SendPropertyChanged("Dystans");
					this.OnDystansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miasto", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_typ", DbType="Int NOT NULL")]
		public int Id_typ
		{
			get
			{
				return this._Id_typ;
			}
			set
			{
				if ((this._Id_typ != value))
				{
					if (this._Typy_biegów.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_typChanging(value);
					this.SendPropertyChanging();
					this._Id_typ = value;
					this.SendPropertyChanged("Id_typ");
					this.OnId_typChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oplata_start", DbType="Int NOT NULL")]
		public int Oplata_start
		{
			get
			{
				return this._Oplata_start;
			}
			set
			{
				if ((this._Oplata_start != value))
				{
					this.OnOplata_startChanging(value);
					this.SendPropertyChanging();
					this._Oplata_start = value;
					this.SendPropertyChanged("Oplata_start");
					this.OnOplata_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typy_biegów_Biegi", Storage="_Typy_biegów", ThisKey="Id_typ", OtherKey="ID", IsForeignKey=true)]
		public Typy_biegów Typy_biegów
		{
			get
			{
				return this._Typy_biegów.Entity;
			}
			set
			{
				Typy_biegów previousValue = this._Typy_biegów.Entity;
				if (((previousValue != value) 
							|| (this._Typy_biegów.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Typy_biegów.Entity = null;
						previousValue.Biegi.Remove(this);
					}
					this._Typy_biegów.Entity = value;
					if ((value != null))
					{
						value.Biegi.Add(this);
						this._Id_typ = value.ID;
					}
					else
					{
						this._Id_typ = default(int);
					}
					this.SendPropertyChanged("Typy_biegów");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Typy_biegów")]
	public partial class Typy_biegów : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nazwa;
		
		private EntitySet<Biegi> _Biegi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Typy_biegów()
		{
			this._Biegi = new EntitySet<Biegi>(new Action<Biegi>(this.attach_Biegi), new Action<Biegi>(this.detach_Biegi));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typy_biegów_Biegi", Storage="_Biegi", ThisKey="ID", OtherKey="Id_typ")]
		public EntitySet<Biegi> Biegi
		{
			get
			{
				return this._Biegi;
			}
			set
			{
				this._Biegi.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Biegi(Biegi entity)
		{
			this.SendPropertyChanging();
			entity.Typy_biegów = this;
		}
		
		private void detach_Biegi(Biegi entity)
		{
			this.SendPropertyChanging();
			entity.Typy_biegów = null;
		}
	}
}
#pragma warning restore 1591
